{"version":3,"sources":["services/configManager.js","services/networkManager.js","components/Table.js","components/FlashMessage.js","pages/List.js","pages/Setup.js","pages/Claims.js","pages/User.js","pages/Index.js","App.js","serviceWorker.js","index.js"],"names":["url","secret","a","localStorage","setItem","getConfig","getItem","isSetup","length","removeItem","internal","page","method","body","undefined","fetch","headers","JSON","stringify","then","r","status","alert","json","fetchGet","fetchPost","deleteUser","uid","window","confirm","renderTime","value","dt","DateTime","fromISO","title","toLocaleString","DATETIME_FULL","columns","Header","accessor","Cell","src","alt","width","height","row","to","original","disabled","emailVerified","className","Object","keys","map","k","provider","providerId","ButtonGroup","Button","onClick","data","onFetch","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","globalFilter","prepareRow","preGlobalFilteredRows","setGlobalFilter","count","React","useState","setValue","onChange","useAsyncDebounce","ButtonToolbar","InputGroup","Prepend","Text","id","Form","Control","type","e","target","placeholder","as","Number","key","striped","bordered","hover","size","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","flash","success","error","Alert","variant","users","setUsers","setFlash","fetchList","useEffect","Container","fluid","Row","Col","FlashMessage","useForm","register","handleSubmit","onSubmit","proxyAddress","proxySecret","storeConfig","catch","Group","controlId","Label","name","ref","required","Append","lg","clearConfig","style","color","href","useParams","claims","setClaims","canSend","setCanSend","formValue","setFormValue","fetchClaims","user","console","log","message","content","jsObject","exact","theme","locale","onKeyPressUpdate","setUser","watch","errors","fetchUser","sendVerificationEmail","askPasswordReset","passwordCheck","defaultValue","displayName","email","Check","label","defaultChecked","phoneNumber","photoURL","validate","v","exampleRequired","redirect","setRedirect","App","class","Navbar","bg","NavbarBrand","Nav","Link","path","Setup","User","Claims","List","Index","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39a5609c.chunk.js","sourcesContent":["// TODO: If using localStorage: Encrypt !\n\nexport async function storeConfig(url, secret) {\n  localStorage.setItem(\"proxySecret\", secret);\n  localStorage.setItem(\"proxyAddress\", url);\n}\n\nexport async function getConfig() {\n  const secret = await localStorage.getItem(\"proxySecret\");\n  const url = await localStorage.getItem(\"proxyAddress\");\n  return { url, secret, isSetup: !!(url?.length) };\n}\n\nexport async function clearConfig() {\n  localStorage.removeItem(\"proxySecret\");\n  localStorage.removeItem(\"proxyAddress\");\n}","import { getConfig } from \"./configManager\";\n\n\nasync function internal(page, method = 'get', body = undefined) {\n  const { url, secret } = await getConfig();\n  return fetch(`${url}/${page}`, {\n    method,\n    headers: { secret, \"Content-Type\": \"application/json\" },\n    body: body ? JSON.stringify(body) : undefined,\n  }).then((r) => { // TODO: Create something better to report errors\n    if (r.status === 401) alert(`The secret token doesn't match the proxy configuration. `);\n    else if (r.status !== 200) alert(`Error while requesting ${url}/${page}: Status ${r.status}.`);\n    return r;\n  }).then((r) => r.json());\n}\n\n\n\nexport function fetchGet(page) {\n  return internal(page);\n}\n\nexport function fetchPost(page, body) {\n  return internal(page, 'post', body);\n}\n\nexport function fetchDelete(page) {\n  return internal(page, 'delete');\n\n}","import React from \"react\";\n\nimport BTable from \"react-bootstrap/Table\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nimport {\n  usePagination,\n  useSortBy,\n  useTable,\n  useGlobalFilter,\n  useAsyncDebounce,\n} from \"react-table\";\nimport { DateTime } from \"luxon\";\n\nimport {\n  GrGoogle,\n  GrFacebook,\n  GrApple,\n  GrHelp,\n  GrMail,\n  GrLinkedin,\n  GrEdit,\n  GrTrash,\n  GrPause,\n  GrRefresh,\n} from \"react-icons/gr\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport \"./Table.css\";\nimport { fetchDelete } from \"../services/networkManager\";\n\n\nconst deleteUser = (uid) => () => {\n  if(window.confirm(`Are you sure you want to delete user ${uid} ?`)) {\n      fetchDelete(`user/${uid}`);\n  }\n};\n\nconst disableUser = (uid) => () => {\n  return alert(\"Not yet implemented\");\n  /*\n  if(window.confirm(`Are you sure you want to disable user ${uid} ?`)) {\n\n  }\n  */\n};\n\nconst renderTime = ({ value }) => {\n  const dt = DateTime.fromISO(value);\n  return (\n    <span title={dt.toLocaleString(DateTime.DATETIME_FULL)}>\n      {dt.toLocaleString()}\n    </span>\n  );\n};\nconst renderName = ({ row, value }) => {\n  return (\n    <span>\n      <Link to={`/user/${row.original.uid}`}>{value}</Link>{\" \"}\n      {!!row.original.disabled && \"🛑\"}\n    </span>\n  );\n};\n\nconst renderEmail = ({ row, value }) => (\n  <span>\n    {value} {!!row.original.emailVerified && \"✅\"}\n  </span>\n);\n\nconst renderClaims = ({ row, value }) => (\n  <>\n    {!!value && (\n      <ul className=\"claimList\">\n        {Object.keys(value).map((k) => (\n          <li>\n            <strong>{`${k}`}</strong>\n            {`: ${value[k]}`}\n          </li>\n        ))}\n      </ul>\n    )}\n    <Link to={`/claims/${row.original.uid}`}>Edit</Link>\n  </>\n);\n\nconst renderButtons = ({ row }) => (\n    <ButtonGroup className=\"buttonsWithIcons\">\n      <LinkContainer to={`/user/${row.original.uid}`}>\n        <Button>\n          <GrEdit title=\"Edit\" />\n        </Button>\n      </LinkContainer>\n      <Button onClick={deleteUser(row.original.uid)}>\n        <GrTrash title=\"Delete\" />\n      </Button>\n      <Button onClick={disableUser(row.original.uid)}>\n        <GrPause title=\"Disable\" />\n      </Button>\n    </ButtonGroup>\n);\n\nconst renderProviders = ({ value }) => {\n  return (\n    !!value?.length &&\n    value.map((provider) => {\n      switch (provider.providerId) {\n        case \"password\":\n          return <GrMail title=\"Password\" />;\n        case \"google.com\":\n          return <GrGoogle title=\"Google\" />;\n        case \"facebook.com\":\n          return <GrFacebook title=\"Facebook\" />;\n        case \"apple.com\":\n          return <GrApple title=\"Apple\" />;\n        case \"linkedin.com\":\n          return <GrLinkedin title=\"LinkedIn\" />;\n        default:\n          return <GrHelp title=\"Unknown\" />;\n      }\n    })\n  );\n};\n\nconst columns = [\n  {\n    Header: \"Picture\",\n    accessor: \"photoURL\",\n    Cell: ({ value }) => !!value && <img src={value} title={value} alt={value} width=\"70\" height=\"70\" />,\n  },\n  {\n    Header: \"Name\",\n    accessor: \"displayName\",\n    Cell: renderName,\n  },\n  {\n    Header: \"Email\",\n    accessor: \"email\",\n    Cell: renderEmail,\n  },\n  {\n    Header: \"Signin\",\n    accessor: \"creationTime\",\n    Cell: renderTime,\n  },\n  {\n    Header: \"Last seen\",\n    accessor: \"lastSignInTime\",\n    Cell: renderTime,\n  },\n  {\n    Header: \"Custom claims\",\n    accessor: \"claims\",\n    Cell: renderClaims,\n  },\n  {\n    Header: \"Firebase UID\",\n    accessor: \"uid\",\n  },\n  {\n    Header: \"Providers\",\n    accessor: \"providers\",\n    Cell: renderProviders,\n  },\n  {\n    Header: \"Actions\",\n    Cell: renderButtons,\n  },\n];\n\nexport default ({ data, onFetch }) => {\n  const {\n    getTableProps,\n    headers,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize, globalFilter },\n    prepareRow,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <>\n      <ButtonToolbar className=\"justify-content-between\">\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"btnGroupAddon2\">Search</InputGroup.Text>\n          </InputGroup.Prepend>\n\n          <Form.Control\n            type=\"text\"\n            value={value || \"\"}\n            onChange={(e) => {\n              setValue(e.target.value);\n              onChange(e.target.value);\n            }}\n            placeholder={`${count} records...`}\n          />\n        </InputGroup>\n\n        {onFetch && (<Button onClick={onFetch}><GrRefresh /> Refresh</Button>)}\n\n        <ButtonGroup>\n          <Button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {\"<<\"}\n          </Button>\n          <Button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {\"<\"}\n          </Button>\n          <Button onClick={() => nextPage()} disabled={!canNextPage}>\n            {\">\"}\n          </Button>\n          <Button\n            onClick={() => gotoPage(pageCount - 1)}\n            disabled={!canNextPage}\n          >\n            {\">>\"}\n          </Button>\n        </ButtonGroup>\n\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"btnGroupAddon2\">\n              Page {pageIndex + 1} of {pageOptions.length}\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n\n          <Form.Control\n            as=\"select\"\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 50, 100].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </Form.Control>\n        </InputGroup>\n      </ButtonToolbar>\n\n      <BTable striped bordered hover size=\"sm\" {...getTableProps()}>\n        <thead>\n          {headers.map((column) => (\n            <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n              {column.render(\"Header\")}\n              <span>\n                {column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\"}\n              </span>\n            </th>\n          ))}\n        </thead>\n        <tbody>\n          {page.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </BTable>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\n\nexport default ({ flash: { success, error } }) => {\n  if (!success && !error) return null;\n  return (\n    <Alert variant={success ? \"success\" : \"warning\"}>{success || error}</Alert>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Table from '../components/Table';\n\nimport { fetchGet } from '../services/networkManager';\nimport { getConfig } from '../services/configManager';\nimport FlashMessage from \"../components/FlashMessage\";\n\nexport default () => {\n\n  const [users, setUsers] = useState([]);\n  const [flash, setFlash] = useState({});\n\n  async function fetchList() {\n    const { users } = await fetchGet(`user/list`);\n    setUsers(users);\n  }\n\n  useEffect(function effect() {\n    getConfig().then(({ isSetup }) => {\n      if (!isSetup) return setFlash({error: \"You didn't setup yur proxy. Use the Setup Proxy button in the upper right corner.\"});\n\n      return fetchList();\n    });\n  }, []);\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          {flash.error ? <FlashMessage flash={flash} /> : <Table data={users} onFetch={fetchList}/>}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport { GrTrash } from 'react-icons/gr';\n\nimport { clearConfig, getConfig, storeConfig } from \"../services/configManager\";\nimport FlashMessage from \"../components/FlashMessage\";\n\nexport default () => {\n  const [flash, setFlash] = useState({});\n\n  const { register, handleSubmit, setValue } = useForm();\n  const onSubmit = ({ proxyAddress, proxySecret }) => {\n    fetch(`${proxyAddress}/ping`).then(r => r.json())\n    .then(() => storeConfig(proxyAddress, proxySecret).then(() => setFlash({ success: \"Config stored !\" })))\n    .catch(() => setFlash({error: `Cannot connect to your proxy on ${proxyAddress}. Is it running ?`}));\n  };\n\n  const clearButtonClicked = () => {\n    clearConfig();\n\n    setValue(\"proxyAddress\", \"\");\n    setValue(\"proxySecret\", \"\");\n\n    setFlash({ success: \"Config cleared !\" });\n  };\n\n  useEffect(() => {\n    getConfig().then(({ url, secret }) => {\n      setValue(\"proxyAddress\", url);\n      setValue(\"proxySecret\", secret);\n    });\n  }, []);\n\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col>\n            <h2>Setup proxy</h2>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <Form.Group controlId=\"proxy-address\">\n                <Form.Label>Proxy Address</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"proxyAddress\"\n                    placeholder=\"http://localhost:8080\"\n                    ref={register}\n                    required\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>://</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n\n              <Form.Group controlId=\"proxy-secret\">\n                <Form.Label>Proxy secret token</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"proxySecret\"\n                  placeholder=\"\"\n                  ref={register}\n                />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Store config\n              </Button>\n            </Form>\n          </Col>\n\n          <Col lg=\"4\">\n            <Button variant=\"danger\" onClick={clearButtonClicked} style={{color: \"black\"}}>\n              <GrTrash /> Clear config\n            </Button>\n\n            <FlashMessage flash={flash} />\n\n            <Alert variant=\"info\">\n              <p>\n                Install a <a href=\"https://github.com/Gp2mv3/firebase-studio\" target=\"_blank\">Firebase Studio proxy</a> and configure it with your <a href=\"https://firebase.google.com/docs/admin/setup#initialize-sdk\" target=\"_blank\">Firebase Admin credentials</a>.\n              </p>\n\n              <p>\n                Your proxy has to be accessible by your browser. Requests are\n                sent directly to the URL. If your proxy is exposed to the web,\n                use a strong secret key to ensure security and change it\n                regularly.\n              </p>\n\n              <p>\n                Your setup is stored in your browser (in <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\" target=\"_blank\"> localStorage</a>).\n              </p>\n            </Alert>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport JSONInput from \"react-json-editor-ajrm\";\nimport locale from \"react-json-editor-ajrm/locale/en\";\n\nimport { GrPrevious, GrRefresh, GrUser } from 'react-icons/gr';\n\nimport FlashMessage from '../components/FlashMessage';\n\nimport { fetchGet, fetchPost } from '../services/networkManager';\n\nexport default () => {\n  const { id } = useParams();\n\n  const [claims, setClaims] = useState({});\n  const [canSend, setCanSend] = useState(false);\n  const [formValue, setFormValue] = useState({});\n  const [flash, setFlash] = useState({});\n\n\n  async function fetchClaims() {\n    const {\n      user: { claims },\n    } = await fetchGet(`user/${id}`);\n\n    setClaims(claims);\n    console.log(claims);\n  }\n\n  async function sendClaims() {\n    setCanSend(false);\n    try {\n      await fetchPost(`user/${id}/claims`, {claims: formValue});\n      setFlash({success: \"Claims updated !\"});\n    }\n    catch (e) {\n      setFlash({error: e.message});\n    }\n  }\n\n\n  async function onChange(content) {\n    if (!content.error && content.jsObject) {\n      setCanSend(true);\n      return setFormValue(content.jsObject);\n    }     \n    setCanSend(false);\n  }\n\n  useEffect(() => {\n    fetchClaims();\n  }, [id]);\n\n  return (\n    <Container fluid>\n\n        <Row>\n          <Col>\n            <LinkContainer exact to=\"/list\">\n              <Button><GrPrevious /> Back to list</Button>\n            </LinkContainer>\n\n            <h2>Edit custom claims</h2>\n\n            <JSONInput\n              id=\"claimEditor\"\n              theme=\"light_mitsuketa_tribute\"\n              placeholder={claims}\n              locale={locale}\n              height=\"200px\"\n              width=\"100%\"\n              onKeyPressUpdate={false}\n              onChange={onChange}\n            />\n            <Button onClick={sendClaims} disabled={!canSend}>Update claims</Button>\n          </Col>\n\n        <Col lg=\"4\">\n          <Button onClick={fetchClaims}><GrRefresh /> Refresh form </Button>\n\n          <LinkContainer to={`/user/${id}`}>\n            <Button>\n              <GrUser /> Edit user\n            </Button>\n          </LinkContainer>\n\n          <FlashMessage flash={flash} />\n\n          <Alert variant=\"info\">\n              <p>Set <a href=\"https://firebase.google.com/docs/auth/admin/custom-claims\" target=\"_blank\">Custom Claims</a> with this editor.</p>\n              \n              <p>Custom Claims cannot exceed 1000 bytes.</p>\n\n              <p>Updating custom claims overrides the complete object and is irreversible.</p>\n            </Alert>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport { Alert } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { GrRefresh, GrUserAdmin, GrPrevious } from \"react-icons/gr\";\nimport { useForm } from \"react-hook-form\";\n\nimport FlashMessage from \"../components/FlashMessage\";\n\nimport { fetchGet, fetchPost } from \"../services/networkManager\";\n\nexport default () => {\n  const { id } = useParams();\n\n  const [user, setUser] = useState(undefined);\n  const [canSend, setCanSend] = useState(false);\n  const [flash, setFlash] = useState({});\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  async function fetchUser() {\n    const { user } = await fetchGet(`user/${id}`);\n\n    console.log({ user });\n    setUser(user);\n    setCanSend(true);\n  }\n\n  const onSubmit = async ({\n    sendVerificationEmail,\n    askPasswordReset,\n    passwordCheck,\n    ...user\n  }) => {\n    setCanSend(false);\n\n    try {\n      await fetchPost(`user/${id}`, { user, sendVerificationEmail });\n      setFlash({ success: \"User updated !\" });\n    } catch (e) {\n      setFlash({ error: e.message });\n    }\n\n    setCanSend(true);\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, [id]);\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <LinkContainer exact to=\"/list\">\n            <Button><GrPrevious /> Back to list</Button>\n          </LinkContainer>\n\n          <h2>Edit user info</h2>\n          {!!user && (\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <Form.Group controlId=\"displayName\">\n                <Form.Label>Display Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Display Name\"\n                  defaultValue={user.displayName}\n                  name=\"displayName\"\n                  ref={register}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email address</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email address\"\n                    defaultValue={user.email}\n                    name=\"email\"\n                    ref={register}\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>@</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n                {/*\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Send verification email (after change)\"\n                  name=\"sendVerificationEmail\"\n                  defaultChecked={user.emailVerified}\n                  ref={register}\n                  style={{\n                    display: user.email !== watch(\"email\") ? \"block\" : \"none\",\n                  }}\n                /> \n                */}\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Verified email address\"\n                  name=\"emailVerified\"\n                  defaultChecked={user.emailVerified}\n                  ref={register}\n                  style={\n                    {\n                      // display: user.email !== watch(\"email\") ? \"none\" : \"block\",\n                    }\n                  }\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"phone\">\n                <Form.Label>Phone number</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"tel\"\n                    placeholder=\"Phone number\"\n                    defaultValue={user.phoneNumber}\n                    name=\"phoneNumber\"\n                    ref={register}\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>#</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n\n              <Form.Group controlId=\"photoURL\">\n                <Form.Label>Photo URL</Form.Label>\n                <InputGroup>\n                  <Form.Control\n                    type=\"url\"\n                    placeholder=\"Photo URL\"\n                    defaultValue={user.photoURL}\n                    name=\"photoURL\"\n                    ref={register}\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text>://</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n\n              <hr />\n              <Form.Group controlId=\"password\">\n                <Form.Label>New password</Form.Label>\n                <Row>\n                  <Col>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      ref={register}\n                    />\n                  </Col>\n                  <Col>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      name=\"passwordCheck\"\n                      ref={register({\n                        validate: (v) => v === watch(\"password\"),\n                      })}\n                    />\n                  </Col>\n                </Row>\n                {/*\n                  <Form.Check\n                  type=\"checkbox\"\n                  label=\"Send password reset email\"\n                  name=\"askPasswordReset\"\n                  ref={register}\n                /> \n                */}\n              </Form.Group>\n\n              <Form.Group controlId=\"photoURL\">\n                <Form.Label>Disable user</Form.Label>\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"User is disabld (Cannot use your app while disabled)\"\n                  name=\"disabled\"\n                  defaultChecked={user.disabled}\n                  ref={register}\n                />\n              </Form.Group>\n\n              {errors.exampleRequired && <span>This field is required</span>}\n\n              <Button type=\"submit\" disabled={!canSend}>\n                Update user\n              </Button>\n            </Form>\n          )}\n        </Col>\n\n        <Col lg=\"4\">\n          <Button onClick={fetchUser}>\n            <GrRefresh /> Refresh form\n          </Button>\n          <LinkContainer to={`/claims/${id}`}>\n            <Button>\n              <GrUserAdmin /> Custom claims\n            </Button>\n          </LinkContainer>\n\n          <FlashMessage flash={flash} />\n\n          <Alert variant=\"info\">\n            <p>All user properties are optional.</p>\n\n            <p>\n              If a certain property is not specified (field is empty), the value\n              for that property will be deleted.\n            </p>\n\n            <p>Old values are lost after you update a user.</p>\n          </Alert>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { getConfig } from \"../services/configManager\";\n\nexport default () => {\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(function effect() {\n    getConfig().then(({ isSetup }) =>  setRedirect(isSetup));\n  }, []);\n\n  if (redirect) return (<Redirect to=\"/list\" />)\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <h2>Welcome to Firebase Studion</h2>\n          <p>\n            Firebase Studio is composed of two components:\n            <ul>\n              <li>\n                The Client (in your browser, actually, you are in front of it)\n              </li>\n              <li>The Proxy (backend connected to your Firebase account)</li>\n            </ul>\n          </p>\n\n          <p>\n            To use Firebase Studio, you need to setup the proxy on your server\n            or locally. The proxy will connect to Firebase, using your Firebase\n            Credentials and will proxy requests from the Client.\n          </p>\n\n          <p>\n            To setup your proxy, follow the guide in the{\" \"}\n            <a href=\"https://github.com/Gp2mv3/firebase-studio\" target=\"_blank\">\n              Firebase Studio doc\n            </a>\n            , then <Link to=\"/setup\">configure it in the client</Link>.\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n  NavbarBrand\n} from \"react-bootstrap\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { GrTroubleshoot, GrUnorderedList } from 'react-icons/gr';\n\nimport List from \"./pages/List\";\nimport Setup from \"./pages/Setup\";\nimport Claims from \"./pages/Claims\";\nimport User from \"./pages/User\";\nimport Index from \"./pages/Index\";\n\nfunction App() {\n  return (\n    <Router>\n      <div id=\"wrapper\">\n        {/*\n        \n        Sidebar\n\n        <ul\n          class=\"navbar-nav bg-gradient-dark sidebar sidebar-dark accordion\"\n          id=\"accordionSidebar\"\n        >\n          <a\n            class=\"sidebar-brand d-flex align-items-center justify-content-center\"\n            href=\"/\"\n          >\n            <div class=\"sidebar-brand-text mx-3\">Firebase Studio</div>\n          </a>\n\n          <hr class=\"sidebar-divider my-0\" />\n        </ul>*/}\n\n        <div id=\"content-wrapper\" class=\"d-flex flex-column\">\n          <div id=\"content\">\n            <Navbar bg=\"primary\" variant=\"dark\">\n              <Container>\n                <LinkContainer to=\"/\">\n                  <NavbarBrand>\n                    Firebase Studio\n                  </NavbarBrand>\n                </LinkContainer>\n\n                <Nav>\n                  <LinkContainer to=\"/list\" exact>\n                    <Nav.Link><GrUnorderedList /> User list</Nav.Link>\n                  </LinkContainer>\n                </Nav>\n\n                <Nav className=\"mr-auto\"></Nav>\n\n                <Nav>\n                  <LinkContainer to=\"/setup\" exact>\n                    <Nav.Link><GrTroubleshoot /> Setup Proxy</Nav.Link>\n                  </LinkContainer>\n                </Nav>\n              </Container>\n            </Navbar>\n\n            <Container id=\"mainPageContainer\">\n              <Switch>\n                <Route path=\"/setup\">\n                  <Setup />\n                </Route>\n\n                <Route path=\"/user/:id\">\n                  <User />\n                </Route>\n\n                <Route path=\"/claims/:id\">\n                  <Claims />\n                </Route>\n\n                <Route path=\"/list\">\n                  <List />\n                </Route>\n\n                <Route path=\"/\">\n                  <Index />\n                </Route>\n              </Switch>\n            </Container>\n          </div>\n\n          <footer class=\"sticky-footer\">\n            <Container className=\"text-center my-auto\">\n              <Row>\n                <Col>\n                  <hr />\n                  <span>\n                    Made by{\" \"}\n                    <a href=\"https://gp2mv3.com\" target=\"_blank\">\n                      Gp2mv3\n                    </a>{\" \"}\n                    - The code is on{\" \"}\n                    <a\n                      href=\"https://github.com/Gp2mv3/firebase-studio\"\n                      target=\"_blank\"\n                    >\n                      Github\n                    </a>\n                  </span>\n                </Col>\n              </Row>\n            </Container>\n          </footer>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './sb-admin-2.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}